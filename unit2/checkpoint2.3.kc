import "string"

#pragma link("mega65hyper.ld")

const char* RASTER = 0xd012;
const char* VIC_MEMORY = 0xd018;
const char* SCREEN = 0x0400;
const char* BGCOL = 0xd021;
const char* COLS = 0xd800;
const char BLACK = 0;
const char WHITE = 1;

char[] MESSAGE = "checkpoint 2.2 by spal0020";

void main() {
*VIC_MEMORY = 0x14;

memset(SCREEN,' ', 40*25);

memset(COLS, WHITE, 40*25);

char* sc = SCREEN+40;
char* msg = MESSAGE;

while(*msg) {
	*sc++ = *msg++;
}

while(true) {
	if(*RASTER==54 || *RASTER==66)
		{
		*BGCOL = WHITE;
	     	}
			else
				{
				*BGCOL = BLACK;
				}
		}
	     }

void syscall1()
	{
	*(SCREEN+79) = ')';
	}

void syscall2()
	{
	*(SCREEN+78) = '(';
	}

#pragma data_seg(Syscall)

struct SysCall
	{
	char xjmp;
	void()* syscall;
	char xnop;
	};


const char JMP = 0x4c;
const char NOP = 0xea;

export struct SysCall[] SYSCALLS = {
{ JMP, &syscall0, NOP },
{ JMP, &syscall1, NOP },
{ JMP, &syscall2, NOP },
{ JMP, &syscall3, NOP },
{ JMP, &syscall4, NOP },
{ JMP, &syscall5, NOP },
{ JMP, &syscall6, NOP },
{ JMP, &syscall7, NOP },
{ JMP, &syscall8, NOP },
{ JMP, &syscall9, NOP },
{ JMP, &syscall10, NOP },
{ JMP, &SECURENTR, NOP },
{ JMP, &SECUREXIT, NOP },
{ JMP, &syscall13, NOP },
{ JMP, &syscall14, NOP },
{ JMP, &syscall15, NOP },
{ JMP, &syscall16, NOP },
{ JMP, &syscall17, NOP },
{ JMP, &syscall18, NOP },
{ JMP, &syscall19, NOP },
{ JMP, &syscall20, NOP },
{ JMP, &syscall21, NOP },
{ JMP, &syscall22, NOP },
{ JMP, &syscall23, NOP },
{ JMP, &syscall24, NOP },
{ JMP, &syscall25, NOP },
{ JMP, &syscall26, NOP },
{ JMP, &syscall27, NOP },
{ JMP, &syscall28, NOP },
{ JMP, &syscall29, NOP },
{ JMP, &syscall30, NOP },
{ JMP, &syscall31, NOP },
{ JMP, &syscall32, NOP },
{ JMP, &syscall33, NOP },
{ JMP, &syscall34, NOP },
{ JMP, &syscall35, NOP },
{ JMP, &syscall36, NOP },
{ JMP, &syscall37, NOP },
{ JMP, &syscall38, NOP },
{ JMP, &syscall39, NOP },
{ JMP, &syscall40, NOP },
{ JMP, &syscall41, NOP },
{ JMP, &syscall42, NOP },
{ JMP, &syscall43, NOP },
{ JMP, &syscall44, NOP },
{ JMP, &syscall45, NOP },
{ JMP, &syscall46, NOP },
{ JMP, &syscall47, NOP },
{ JMP, &syscall48, NOP },
{ JMP, &syscall49, NOP },
{ JMP, &syscall50, NOP },
{ JMP, &syscall51, NOP },
{ JMP, &syscall52, NOP },
{ JMP, &syscall53, NOP },
{ JMP, &syscall54, NOP },
{ JMP, &syscall55, NOP },
{ JMP, &syscall56, NOP },
{ JMP, &syscall57, NOP },
{ JMP, &syscall58, NOP },
{ JMP, &syscall59, NOP },
{ JMP, &syscall60, NOP },
{ JMP, &syscall61, NOP },
{ JMP, &syscall62, NOP },
{ JMP, &syscall63, NOP }
};

export align(0x100) struct SysCall[] TRAPS = {
	{ JMP, &main, NOP },
	{ JMP, &PAGFAULT, NOP },
	{ JMP, &RESTORKEY, NOP },
	{ JMP, &ALTTABKEY, NOP },
	{ JMP, &VF011RD, NOP },
	{ JMP, &VF011WR, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &undefined_trap, NOP },
	{ JMP, &CPUKIL, NOP }
	};

